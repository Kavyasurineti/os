#include <stdio.h>

void main() {
    int i, j, temp, framearr[20], pages, pageno, frames, memsize, log, pagesize, prosize, base;

    printf("Enter the Process size: ");
    scanf("%d", &prosize);
    
    printf("\nEnter the main memory size: ");
    scanf("%d", &memsize); 
    
    printf("\nEnter the page size: ");
    scanf("%d", &pagesize);
    
    pages = prosize / pagesize;
    printf("\nThe process is divided into %d pages", pages);
    
    frames = memsize / pagesize;
    printf("\n\nThe main memory is divided into %d frames\n", frames);
    
   
    for (i = 0; i < frames; i++) {
        framearr[i] = -1;
    }
    
   
    for (i = 0; i < pages; i++) {
        while (1) {
            printf("\nEnter the frame number of page %d: ", i);
            scanf("%d", &temp);
           
            if (temp >= frames) {
                printf("\n\t****Invalid frame number****\n");
            } else {
                // Assign page number to frame
                framearr[temp] = i;
                break; // Exit the loop once valid input is received
            }
        }
    }

   
    printf("\n\nFrame No\tPage No\tValidation Bit\n------\t------\t----------");
    for (i = 0; i < frames; i++) {
        printf("\n %d \t %2d \t", i, framearr[i]);
        printf(framearr[i] == -1 ? " 0" : " 1");
    }
    
    
    printf("\nEnter the logical address: ");
    scanf("%d", &log);
    
    printf("\nEnter the base address: ");
    scanf("%d", &base);
    
    pageno = log / pagesize; // Calculate page number
    temp = -1; // Initialize temp to -1 to indicate not found

    for (i = 0; i < frames; i++) {
        if (framearr[i] == pageno) {
            temp = i; // Store the frame number
            break;
        }
    }
    j = log % pagesize;
    
    if (temp != -1) { // If page was found
        temp = base + (temp * pagesize) + j;
        printf("\nPhysical address is : %d", temp);
    } else {
        printf("\n\t****Invalid logical address****\n");
    }
}
